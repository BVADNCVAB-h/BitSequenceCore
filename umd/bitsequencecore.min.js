(function(r,t){if(typeof define==="function"&&define.amd){define([],t)}else if(typeof module==="object"&&module.exports){module.exports=t()}else{r.BitSequenceCore=t()}})(this,function(){"use strict";return function(){var a=this;var y=8;var n=8;var f=8;var q=0;var x=[];this.getSequence=function(r,t){var e=0;var n=Math.floor(r/y);var i=r%y;var a=Math.floor(t/y);var f=t%y;var o=Math.floor((q-1)/y);var u=1,v;for(var h=a;h>=n;h--){var s=0,c=y-1,v=0;var d=h<=o&&x[h]!==undefined;if(d)v=x[h];if(h==a)c=f;if(h==n)s=i;var l=c-s+1;v>>=y-c-1;v&=(1<<l)-1;v*=u;u*=Math.pow(2,l);e+=v}return e};this.setSequence=function(r,t,e){var n=Math.floor(r/y);var i=r%y;var a=Math.floor(t/y);var f=t%y;var o=Math.floor((q-1)/y);var u=1,v,h;for(var s=a;s>=n;s--){var c=0,d=y-1,h=0;var l=s<=o&&x[s]!==undefined;if(l)h=x[s];if(s==a)d=f;if(s==n)c=i;var g=d-c+1;var M=h,m=h;var S=y-c;var N=y-d-1;M>>=S;M<<=S;m&=(1<<N)-1;v=u*Math.pow(2,g);var p=e%v;p=Math.floor(p/u);p<<=N;u=v;x[s]=M+p+m}if(t+1>q)q=t+1;return true};this.getIterator=function(){return new function(){var i=0;this.bitsLeft=function(){return q-i};this.hasNext=function(){return i<q};this.getNext=function(r){var t=i;var e=i+r-1;var n=a.getSequence(t,e);i=e+1;return n};this.setNext=function(r,t){var e=i;var n=i+r-1;a.setSequence(e,n,t);i=n+1;return this};this.shift=function(r){i+=r;if(i<0)i=0;if(i>q)i=q;return this}}};var i=function(r,t,e,n){var i=[];var a=-1,f=0;var o=-1,u=0;var v,h,s=0;var c=t;while(true){f-=s;u-=s;c-=s;if(f==0){a++;f=e;var d=r[a]!==undefined;if(d)v=r[a];else v=0}if(u==0||c<=0){if(o>=0)i[o]=h;o++;u=n;h=0}if(c<=0)break;s=f>u?u:f;if(c<s)s=c;var l=v>>f-s;l&=(1<<s)-1;l<<=u-s;h+=l}return i};this.toArray=function(r){if(r===undefined)r=n;return i(x,q,y,r)};this.fromArray=function(r,t,e){if(isNaN(+t))return null;if(e===undefined)e=n;x=i(r,t,e,y);q=t;return this};this.toString=function(r){if(r===undefined)r=f;var t=[];var e=this.toArray(r);for(var n=0;n<e.length;n++){t[n]=String.fromCharCode(e[n])}return t.join("")};this.fromString=function(r,t,e){if(isNaN(+t))return null;if(e===undefined)e=f;var n=[];for(var i=0;i<r.length;i++){n[i]=r.charCodeAt(i)}return this.fromArray(n,t,e)};this.bitLength=function(){return q}}});